{"version":3,"file":"static/js/513.9d58ecac.chunk.js","mappings":"mRACA,GAAgB,UAAY,6BAA6B,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,yBAAyB,YAAc,gC,8BCclKA,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,wBAuGZ,EAlGkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IACpBC,GAAwBF,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAEpCE,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACH,OAAOV,EAASW,GAClB,IAAK,WACH,OAAOT,EAAYS,GACrB,QACE,OAEL,EAUD,OACE,gCACGL,IACC,SAACM,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,OAGJ,SAACC,EAAA,EAAD,CACEC,IAAI,EACJC,QAAM,EACNC,WAAYC,EAAAA,EACZC,QAAS,IACTC,eAAa,EALf,UAOE,SAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,qBAEA,kBACEC,aAAa,MACbC,SA5BS,SAAAlB,GACnBA,EAAMmB,iBAEN/B,EAASgC,EAAAA,EAAAA,MAAqB,CAAE7B,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,GACb,EAuBWqB,UAAWC,EAAAA,YAHb,WAKE,UAACK,EAAA,EAAD,CAAetC,MAAOA,EAAtB,WACE,SAACuC,EAAA,EAAD,CACEL,aAAa,MACbF,UAAWC,EAAAA,MACXO,MAAM,QACNC,KAAK,QACLtB,KAAK,QACLC,MAAOZ,EACPkC,OAAO,QACPC,KAAK,QACLC,MAAM,UACNC,QAAQ,WACRC,SAAU9B,KAGZ,SAACuB,EAAA,EAAD,CACEP,UAAWC,EAAAA,MACXO,MAAM,WACNC,KAAK,WACLtB,KAAK,WACLC,MAAOV,EACPgC,OAAO,QACPC,KAAK,QACLC,MAAM,UACNC,QAAQ,WACRC,SAAU9B,KAGZ,SAAC+B,EAAA,EAAD,CACEN,KAAK,SACLT,UAAWC,EAAAA,OACXY,QAAQ,YACRF,KAAK,QACLC,MAAM,UALR,uBAUDhC,IAAS,SAACoC,EAAA,EAAD,CAAOC,SAAS,QAAhB,8CAOvB,C,qBCtHD,KAAgB,OAAS,qDAAqD,aAAe,2D","sources":["webpack://phonebook/./src/views/LoginView/LoginView.module.scss?d969","views/LoginView/LoginView.js","webpack://phonebook/./src/components/transitionStyles/loginAndRegisterViewTransitionStyles.module.scss?5cf2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"LoginView_Container__WDgx+\",\"Title\":\"LoginView_Title__+a9aC\",\"Form\":\"LoginView_Form__Tr7Vh\",\"Input\":\"LoginView_Input__tXA58\",\"contactForm\":\"LoginView_contactForm__Bc3Ap\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from 'redux/auth';\n\nimport Modal from 'components/Modal/Modal';\nimport Preloader from 'components/Preloader/Preloader';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Container } from '@material-ui/core';\nimport Alert from '@mui/material/Alert';\nimport styles from './LoginView.module.scss';\nimport { CSSTransition } from 'react-transition-group';\nimport loginAndRegisterViewTransitionStyles from '../../components/transitionStyles/loginAndRegisterViewTransitionStyles.module.scss';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: 'rgb(87, 115, 246)',\n    },\n  },\n});\n\nconst LoginView = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(authSelectors.getError);\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      {isFetchingCurrentUser && (\n        <Modal>\n          <Preloader />\n        </Modal>\n      )}\n      <CSSTransition\n        in={true}\n        appear\n        classNames={loginAndRegisterViewTransitionStyles}\n        timeout={500}\n        unmountOnExit\n      >\n        <Container maxWidth=\"sm\">\n          <div className={styles.Container}>\n            <h1 className={styles.Title}>Log In</h1>\n\n            <form\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n              className={styles.contactForm}\n            >\n              <ThemeProvider theme={theme}>\n                <TextField\n                  autoComplete=\"off\"\n                  className={styles.Input}\n                  label=\"Email\"\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  margin=\"dense\"\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                />\n\n                <TextField\n                  className={styles.Input}\n                  label=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  margin=\"dense\"\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                />\n\n                <Button\n                  type=\"submit\"\n                  className={styles.Button}\n                  variant=\"contained\"\n                  size=\"large\"\n                  color=\"primary\"\n                >\n                  Log In\n                </Button>\n              </ThemeProvider>\n              {error && <Alert severity=\"error\">You aren't logged in</Alert>}\n            </form>\n          </div>\n        </Container>\n      </CSSTransition>\n    </>\n  );\n};\n\nexport default LoginView;\n","// extracted by mini-css-extract-plugin\nexport default {\"appear\":\"loginAndRegisterViewTransitionStyles_appear__CqhHM\",\"appearActive\":\"loginAndRegisterViewTransitionStyles_appearActive__AdVtO\"};"],"names":["theme","createTheme","palette","primary","main","dispatch","useDispatch","useState","email","setEmail","password","setPassword","error","useSelector","authSelectors","isFetchingCurrentUser","handleChange","event","target","name","value","Modal","Preloader","CSSTransition","in","appear","classNames","loginAndRegisterViewTransitionStyles","timeout","unmountOnExit","Container","maxWidth","className","styles","autoComplete","onSubmit","preventDefault","authOperations","ThemeProvider","TextField","label","type","margin","size","color","variant","onChange","Button","Alert","severity"],"sourceRoot":""}
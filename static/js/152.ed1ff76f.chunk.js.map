{"version":3,"file":"static/js/152.ed1ff76f.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://phonebook/./src/components/Section/section.module.scss?d3fd","components/Section/section.js","webpack://phonebook/./src/components/ContactForm/ContactForm.module.scss?6b75","components/ContactForm/ContactForm.jsx","webpack://phonebook/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.js","webpack://phonebook/./src/components/Filter/Filter.module.scss?573d","components/Filter/Filter.jsx","webpack://phonebook/./src/components/transitionStyles/contactViewTransitionStyles.module.scss?ec90","views/ContactsView/ContactsView.js","webpack://phonebook/./src/components/transitionStyles/loginAndRegisterViewTransitionStyles.module.scss?5cf2"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContacts = state =>\n  getContacts(state).filter(({ name }) =>\n    name.toLowerCase().includes(getFilter(state).toLowerCase()),\n  );\n\n/* const getFilteredContactsList = (allcontacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return allcontacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  }; */\n","// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport s from './section.module.scss';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h1 className={s.title}>{title}</h1>}\n\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__O2OxW\",\"nameLabel\":\"ContactForm_nameLabel__xNJgc\",\"numberLabel\":\"ContactForm_numberLabel__7kFzf ContactForm_nameLabel__xNJgc\",\"contactFormInput\":\"ContactForm_contactFormInput__oMNdA\",\"errorMessage\":\"ContactForm_errorMessage__p70Tv\",\"submitButton\":\"ContactForm_submitButton__KmKm9\",\"iconButton\":\"ContactForm_iconButton__GlVc9\"};","import { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperation } from '../../redux/contacts';\nimport { BsFillFilePersonFill } from 'react-icons/bs';\n\nimport { toast } from 'react-toastify';\n/* import * as yup from 'yup'; */\n/* import { Formik, Form, Field, ErrorMessage } from 'formik'; */\nimport s from './ContactForm.module.scss';\n\nuuidv4();\n\n/* const validationSchema = yup.object({\n  name: yup.string().required(\"Enter contact's name\"),\n  number: yup\n    .string()\n    .length(10, 'Example: 0930939393')\n    .required(\"Enter contact's phone\"),\n}); */\n\n/* [addContact.fulfilled]: (state, { payload }) =>\n    state.some(({ name }) => name === payload.name)\n      ? toast(`${payload.name} already exists in your phonebook`)\n      : [...state, payload], */\n\nexport default function ContactForm(/* { onSubmit } */) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const addFilterContact = contact => {\n    const contactFind = contacts.some(({ name }) => name === contact.name);\n\n    contactFind\n      ? toast(` ${name} already exists in your phonebook`)\n      : dispatch(contactsOperation.addContact(contact));\n  };\n\n  const handleInput = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addFilterContact({ name, number });\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form\n      className={s.contactForm}\n      onSubmit={handleSubmit}\n      /* validationSchema={validationSchema} */\n    >\n      <label className={s.nameLabel}>\n        Name:\n        <input\n          className={s.contactFormInput}\n          id={uuidv4()}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n        />\n        {/* <Field type=\"text\" name=\"name\" className={s.contactFormInput} /> */}\n        <span className={s.errorMessage}>\n          {/* <ErrorMessage name=\"name\" /> */}\n        </span>\n      </label>\n      <label className={s.numberLabel}>\n        Number:\n        {/* <Field type=\"tel\" name=\"number\" className={s.contactFormInput} /> */}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={s.contactFormInput}\n          value={number}\n          onChange={handleInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          required\n        />\n        <span className={s.errorMessage}>\n          {/* <ErrorMessage name=\"number\" /> */}\n        </span>\n      </label>\n\n      <button type=\"submit\" className={s.submitButton}>\n        Add contact\n        <BsFillFilePersonFill className={s.iconButton} />\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__mDEYL\",\"listItem\":\"ContactList_listItem__zC5Lc\",\"even\":\"ContactList_even__+kbGi ContactList_listItem__zC5Lc\",\"odd\":\"ContactList_odd__jR8tp ContactList_listItem__zC5Lc\",\"deleteButton\":\"ContactList_deleteButton__rx7WF\"};","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n/* import actions from '../../redux/contacts/contacts-action'; */\nimport s from './ContactList.module.scss';\nimport DeleteIcon from '@mui/icons-material/Delete';\n/* import { getFilteredContacts } from '../../redux/contacts/contacts-selectors'; */\nimport { contactsSelectors, contactsOperation } from '../../redux/contacts';\nconst ContactList = () => {\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n  /*   const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter); */\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(contactsOperation.deleteContact(id));\n\n  /* const getFilteredContactsList = (allcontacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return allcontacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  }; */\n\n  /* const normalizedFilter = (allcontacts, filter) => {\n    return allcontacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }; */\n\n  /* const getFilteredContacts = getFilteredContactsList(contacts, filter); */\n\n  return (\n    <ul className={s.contactsList}>\n      {contacts.map(({ id, name, number }, idx) => (\n        <li key={id} className={idx % 2 === 0 ? s.even : s.odd}>\n          <span>\n            {name}: {number}\n          </span>\n          <button\n            type=\"button\"\n            id={id}\n            className={s.deleteButton}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n            <DeleteIcon sx={{ fontSize: 20 }} />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nContactList.propTypes = PropTypes.shape({\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleteButtonClick: PropTypes.func.isRequired,\n}).isRequired;\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"Filter_inputWrapper__3nIU8\",\"filterLabel\":\"Filter_filterLabel__slSKo\",\"filterInput\":\"Filter_filterInput__5ZbXj\"};","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contacts-action';\nimport { contactsSelectors } from '../../redux/contacts';\nimport s from './Filter.module.scss';\n\nexport default function Filter() {\n  const initialValue = useSelector(contactsSelectors.getFilter);\n  console.log(initialValue);\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => dispatch(filterContact(e.target.value));\n\n  return (\n    <div className={s.inputWrapper}>\n      <label className={s.filterLabel}>\n        <h5 className={s.filterInput}>Find contacts by name:</h5>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={initialValue}\n          onChange={onFilterChange}\n        />\n      </label>\n    </div>\n  );\n}\nFilter.defaultProps = {\n  initialValue: '',\n};\nFilter.propTypes = PropTypes.shape({\n  initialValue: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired,\n}).isRequired;\n","// extracted by mini-css-extract-plugin\nexport default {\"appear\":\"contactViewTransitionStyles_appear__7MDZZ\",\"appearActive\":\"contactViewTransitionStyles_appearActive__xELPN\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperation } from 'redux/contacts';\nimport { Grid } from 'react-loader-spinner';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Section from '../../components/Section/section';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { CSSTransition } from 'react-transition-group';\nimport loginAndRegisterViewTransitionStyles from '../../components/transitionStyles/loginAndRegisterViewTransitionStyles.module.scss';\nimport contactViewTransitionStyles from '../../components/transitionStyles/contactViewTransitionStyles.module.scss';\n\nconst ContactsView = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(contactsSelectors.getIsLoading);\n  const isError = useSelector(contactsSelectors.getError);\n  const isContacts = useSelector(contactsSelectors.getContacts);\n\n  useEffect(() => {\n    dispatch(contactsOperation.getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <CSSTransition\n        in={true}\n        appear\n        classNames={loginAndRegisterViewTransitionStyles}\n        timeout={500}\n        unmountOnExit\n      >\n        <Section title=\"Phonebook\">\n          <ContactForm />\n          <Filter />\n        </Section>\n      </CSSTransition>\n\n      <CSSTransition\n        in={true}\n        appear\n        classNames={contactViewTransitionStyles}\n        timeout={500}\n        unmountOnExit\n      >\n        <Section title=\"Saved contacts\">\n          {isLoading && (\n            <Grid\n              heigth=\"120\"\n              width=\"120\"\n              color=\"#5773f6\"\n              ariaLabel=\"loading\"\n            />\n          )}\n          {isContacts.length === 0 ? (\n            <h3>You don't have contacts yet</h3>\n          ) : (\n            <ContactList />\n          )}\n          {isError && toast.error('We were unable to load contacts!')}\n        </Section>\n      </CSSTransition>\n      <ToastContainer autoClose={1500} />\n    </>\n  );\n};\n\nexport default ContactsView;\n","// extracted by mini-css-extract-plugin\nexport default {\"appear\":\"loginAndRegisterViewTransitionStyles_appear__CqhHM\",\"appearActive\":\"loginAndRegisterViewTransitionStyles_appearActive__AdVtO\"};"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","loading","getError","error","getFilteredContacts","name","toLowerCase","includes","title","children","className","s","ContactForm","useState","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","handleInput","e","target","value","resetInput","onSubmit","event","contact","preventDefault","some","toast","contactsOperation","id","uuidv4","type","onChange","pattern","required","map","idx","onClick","onDeleteContact","Delete","sx","fontSize","Filter","initialValue","console","log","filterContact","defaultProps","isLoading","isError","isContacts","useEffect","CSSTransition","in","appear","classNames","loginAndRegisterViewTransitionStyles","timeout","unmountOnExit","contactViewTransitionStyles","heigth","width","color","ariaLabel","length","autoClose"],"sourceRoot":""}
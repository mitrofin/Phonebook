{"version":3,"file":"static/js/790.87fc7e62.chunk.js","mappings":"mRACA,GAAgB,UAAY,gCAAgC,MAAQ,4BAA4B,KAAO,2BAA2B,MAAQ,4BAA4B,YAAc,kCAAkC,UAAY,gCAAgC,YAAc,gEAAgE,iBAAmB,uCAAuC,aAAe,mCAAmC,aAAe,oC,8BCcrcA,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,wBA+HZ,EA1HqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IACpBC,GAAwBF,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAEpCE,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MAEd,OAAQb,GACN,IAAK,OACH,OAAOC,EAAQY,GACjB,IAAK,QACH,OAAOV,EAASU,GAClB,IAAK,WACH,OAAOR,EAAYQ,GACrB,QACE,OAEL,EAWD,OACE,gCACGJ,IACC,SAACK,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,OAGJ,SAACC,EAAA,EAAD,CACEC,IAAI,EACJC,QAAM,EACNC,WAAYC,EAAAA,EACZC,QAAS,IACTC,eAAa,EALf,UAOE,SAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,6BAEA,kBACEC,aAAa,MACbC,SA7BS,SAAAjB,GACnBA,EAAMkB,iBAENhC,EAASiC,EAAAA,EAAAA,SAAwB,CAAE9B,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAuBWoB,UAAWC,EAAAA,YAHb,WAKE,UAACK,EAAA,EAAD,CAAevC,MAAOA,EAAtB,WACE,SAACwC,EAAA,EAAD,CACEL,aAAa,MACbF,UAAWC,EAAAA,MACXO,MAAM,YACNC,KAAK,OACLlC,KAAK,OACLa,MAAOb,EACPmC,OAAO,QACPC,KAAK,QACLC,MAAM,UACNC,QAAQ,WACRC,SAAU7B,KAGZ,SAACsB,EAAA,EAAD,CACEL,aAAa,MACbF,UAAWC,EAAAA,MACXO,MAAM,QACNC,KAAK,QACLlC,KAAK,QACLa,MAAOX,EACPkC,KAAK,QACLD,OAAO,QACPE,MAAM,UACNC,QAAQ,WACRC,SAAU7B,KAGZ,SAACsB,EAAA,EAAD,CACEL,aAAa,MACbF,UAAWC,EAAAA,MACXO,MAAM,WACNC,KAAK,WACLlC,KAAK,WACLwC,GAAG,WACH3B,MAAOT,EACP+B,OAAO,QACPC,KAAK,QACLC,MAAM,UACNC,QAAQ,WACRC,SAAU7B,KAGZ,SAAC+B,EAAA,EAAD,CACEP,KAAK,SACLT,UAAWC,EAAAA,OACXY,QAAQ,YACRF,KAAK,QACLC,MAAM,UALR,yBAUD/B,IACC,SAACoC,EAAA,EAAD,CAAOC,SAAS,QAAhB,wFAUf,C,qBC9ID,KAAgB,OAAS,qDAAqD,aAAe,2D","sources":["webpack://phonebook/./src/views/RegisterView/RegisterView.module.scss?41bf","views/RegisterView/RegisterView.js","webpack://phonebook/./src/components/transitionStyles/loginAndRegisterViewTransitionStyles.module.scss?5cf2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"RegisterView_Container__DMKfp\",\"Title\":\"RegisterView_Title__4ddWW\",\"Form\":\"RegisterView_Form__+bd7z\",\"Input\":\"RegisterView_Input__NdZR7\",\"contactForm\":\"RegisterView_contactForm__KC4gM\",\"nameLabel\":\"RegisterView_nameLabel__ckgVu\",\"numberLabel\":\"RegisterView_numberLabel__4Rhxo RegisterView_nameLabel__ckgVu\",\"contactFormInput\":\"RegisterView_contactFormInput__rBkmj\",\"errorMessage\":\"RegisterView_errorMessage__cRk9k\",\"submitButton\":\"RegisterView_submitButton__Z1aWh\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from 'redux/auth';\nimport { Container /* Button */ } from '@material-ui/core';\nimport Modal from 'components/Modal/Modal';\nimport Preloader from 'components/Preloader/Preloader';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Alert from '@mui/material/Alert';\nimport styles from './RegisterView.module.scss';\nimport { CSSTransition } from 'react-transition-group';\nimport loginAndRegisterViewTransitionStyles from '../../components/transitionStyles/loginAndRegisterViewTransitionStyles.module.scss';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: 'rgb(87, 115, 246)',\n    },\n  },\n});\n\nconst RegisterView = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(authSelectors.getError);\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      {isFetchingCurrentUser && (\n        <Modal>\n          <Preloader />\n        </Modal>\n      )}\n      <CSSTransition\n        in={true}\n        appear\n        classNames={loginAndRegisterViewTransitionStyles}\n        timeout={500}\n        unmountOnExit\n      >\n        <Container maxWidth=\"sm\">\n          <div className={styles.Container}>\n            <h1 className={styles.Title}>Register form:</h1>\n\n            <form\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n              className={styles.contactForm}\n            >\n              <ThemeProvider theme={theme}>\n                <TextField\n                  autoComplete=\"off\"\n                  className={styles.Input}\n                  label=\"Your name\"\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  margin=\"dense\"\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                />\n\n                <TextField\n                  autoComplete=\"off\"\n                  className={styles.Input}\n                  label=\"Email\"\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  size=\"small\"\n                  margin=\"dense\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                />\n\n                <TextField\n                  autoComplete=\"off\"\n                  className={styles.Input}\n                  label=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={password}\n                  margin=\"dense\"\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                />\n\n                <Button\n                  type=\"submit\"\n                  className={styles.Button}\n                  variant=\"contained\"\n                  size=\"large\"\n                  color=\"primary\"\n                >\n                  Register\n                </Button>\n              </ThemeProvider>\n              {error && (\n                <Alert severity=\"error\">\n                  This username is already taken, please choose a different one.\n                </Alert>\n              )}\n            </form>\n          </div>\n        </Container>\n      </CSSTransition>\n    </>\n  );\n};\n\nexport default RegisterView;\n","// extracted by mini-css-extract-plugin\nexport default {\"appear\":\"loginAndRegisterViewTransitionStyles_appear__CqhHM\",\"appearActive\":\"loginAndRegisterViewTransitionStyles_appearActive__AdVtO\"};"],"names":["theme","createTheme","palette","primary","main","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","error","useSelector","authSelectors","isFetchingCurrentUser","handleChange","event","target","value","Modal","Preloader","CSSTransition","in","appear","classNames","loginAndRegisterViewTransitionStyles","timeout","unmountOnExit","Container","maxWidth","className","styles","autoComplete","onSubmit","preventDefault","authOperations","ThemeProvider","TextField","label","type","margin","size","color","variant","onChange","id","Button","Alert","severity"],"sourceRoot":""}